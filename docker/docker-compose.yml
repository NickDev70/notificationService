version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: notification-postgres
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: notification
      POSTGRES_PASSWORD: notification123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - notification-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notification -d notificationdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: docker/dockerfile.app
    container_name: notification-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notificationdb
      SPRING_DATASOURCE_USERNAME: notification
      SPRING_DATASOURCE_PASSWORD: notification123
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/notificationdb
      SPRING_FLYWAY_USER: notification
      SPRING_FLYWAY_PASSWORD: notification123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - notification-network
    restart: no

volumes:
  postgres_data:

networks:
  notification-network:
    driver: bridge