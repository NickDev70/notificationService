{
  "info": {
    "name": "Notification Service API",
    "description": "Коллекция для тестирования API сервиса уведомлений",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/1",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "1"]
            }
          }
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fullName\": \"Иван Петров\",\n    \"notificationPeriods\": \"\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fullName\": \"Иван Петров (обновлено)\",\n    \"notificationPeriods\": \"\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/1",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "1"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/1",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "Events",
      "item": [
        {
          "name": "Get All Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/events",
              "host": ["{{base_url}}"],
              "path": ["api", "events"]
            }
          }
        },
        {
          "name": "Get Event by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/events/1",
              "host": ["{{base_url}}"],
              "path": ["api", "events", "1"]
            }
          }
        },
        {
          "name": "Create Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"Новое важное событие\",\n    \"occurredAt\": \"2024-01-15T10:30:00\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/events",
              "host": ["{{base_url}}"],
              "path": ["api", "events"]
            }
          }
        },
        {
          "name": "Create Event without time",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"Событие без времени\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/events",
              "host": ["{{base_url}}"],
              "path": ["api", "events"]
            }
          }
        },
        {
          "name": "Update Event",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"Обновленное событие\",\n    \"occurredAt\": \"2024-01-15T11:00:00\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/events/1",
              "host": ["{{base_url}}"],
              "path": ["api", "events", "1"]
            }
          }
        },
        {
          "name": "Delete Event",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/events/1",
              "host": ["{{base_url}}"],
              "path": ["api", "events", "1"]
            }
          }
        },
        {
          "name": "Search Events by Message",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/events/search?keyword=важное",
              "host": ["{{base_url}}"],
              "path": ["api", "events", "search"],
              "query": [
                {
                  "key": "keyword",
                  "value": "важное"
                }
              ]
            }
          }
        },
        {
          "name": "Get Events by Date Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/events/date-range?start=2024-01-01T00:00:00&end=2024-01-31T23:59:59",
              "host": ["{{base_url}}"],
              "path": ["api", "events", "date-range"],
              "query": [
                {
                  "key": "start",
                  "value": "2024-01-01T00:00:00"
                },
                {
                  "key": "end",
                  "value": "2024-01-31T23:59:59"
                }
              ]
            }
          }
        },
        {
          "name": "Get Events After Date",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/events/after?dateTime=2024-01-15T00:00:00",
              "host": ["{{base_url}}"],
              "path": ["api", "events", "after"],
              "query": [
                {
                  "key": "dateTime",
                  "value": "2024-01-15T00:00:00"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Health & Monitoring",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/health",
              "host": ["{{base_url}}"],
              "path": ["actuator", "health"]
            }
          }
        },
        {
          "name": "Application Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/info",
              "host": ["{{base_url}}"],
              "path": ["actuator", "info"]
            }
          }
        },
        {
          "name": "Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/metrics",
              "host": ["{{base_url}}"],
              "path": ["actuator", "metrics"]
            }
          }
        }
      ]
    }
  ]
}
